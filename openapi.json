{
  "openapi": "3.0.3",
  "info": { "title": "Chroma Hybrid API", "version": "1.0.0" },
  "paths": {
    "/health": {
      "get": {
        "summary": "Health check",
        "responses": {
          "200": { "description": "OK", "content": { "application/json": { "schema": { "type": "object", "properties": { "status": { "type": "string", "example": "ok" } } } } } }
        }
      }
    },
    "/queue": {
      "get": {
        "summary": "Queue status (Comfy-style)",
        "responses": {
          "200": { "description": "OK", "content": { "application/json": { "schema": { "type": "object", "properties": { "queue_remaining": { "type": "integer", "example": 0 } } } } } }
        }
      }
    },
    "/run": {
      "post": {
        "summary": "Load Balancer entrypoint (also accepts Runpod queue-style body)",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  { "$ref": "#/components/schemas/InputEnvelope" },
                  { "$ref": "#/components/schemas/InputDirect" }
                ]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Result or warmup acknowledgement", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Output" } } } }
        }
      }
    },
    "/prompt": {
      "post": {
        "summary": "ComfyUI /prompt compatible endpoint",
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ComfyPrompt" } } }
        },
        "responses": {
          "200": { "description": "Accepted", "content": { "application/json": { "schema": { "type": "object", "properties": { "prompt_id": { "type": "string" } } } } } },
          "400": { "description": "Bad Request" },
          "500": { "description": "Server Error" }
        }
      }
    },
    "/history/{prompt_id}": {
      "get": {
        "summary": "ComfyUI /history compatible endpoint",
        "parameters": [
          { "name": "prompt_id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "History item", "content": { "application/json": { "schema": { "type": "object", "properties": { "history": { "type": "object", "additionalProperties": true } } } } } },
          "404": { "description": "Not Found" }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "InputEnvelope": {
        "type": "object",
        "properties": {
          "input": { "$ref": "#/components/schemas/InputDirect" }
        },
        "required": ["input"]
      },
      "InputDirect": {
        "type": "object",
        "properties": {
          "prompt": { "type": "string", "description": "Text prompt. If omitted, request warms the model." },
          "negative_prompt": { "type": "string" },
          "steps": { "type": "integer", "default": 6 },
          "num_images": { "type": "integer", "default": 1 },
          "width": { "type": "integer" },
          "height": { "type": "integer" },
          "guidance_scale": { "type": "number" },
          "output_format": { "type": "string", "enum": ["PNG", "JPG", "WEBP"], "default": "PNG" },
          "warmup": { "type": "boolean", "description": "If true, just prefetch weights/caches." },
          "comfy": { "type": "boolean", "description": "Treat `payload` as a ComfyUI /prompt body." },
          "payload": { "$ref": "#/components/schemas/ComfyPrompt" }
        }
      },
      "ComfyPrompt": {
        "type": "object",
        "properties": {
          "prompt": { "type": "object", "additionalProperties": true },
          "client_id": { "type": "string" }
        },
        "required": ["prompt"]
      },
      "Output": {
        "oneOf": [
          {
            "type": "object",
            "properties": {
              "status": { "type": "string", "example": "ok" },
              "warmed": { "type": "boolean" }
            }
          },
          {
            "type": "object",
            "properties": {
              "status": { "type": "string", "example": "ok" },
              "count": { "type": "integer" },
              "results": {
                "type": "array",
                "items": { "type": "object", "properties": { "url": { "type": "string", "format": "uri" } } }
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "status": { "type": "string", "example": "ok" },
              "prompt_id": { "type": "string" }
            }
          },
          {
            "type": "object",
            "properties": {
              "status": { "type": "string", "example": "error" },
              "error": { "type": "string" }
            }
          }
        ]
      }
    }
  }
}
